*, *::after, *::before{

box-sizing: border-box;

}

body{

    margin:0;
  
    
}

:root{

    --cell-size:100px;
    --mark-size: calc(var(--cell-size)* .9);  /* x and 0 should be 90 percent of cell */
}

.board{

    width: 50vw;
    height: 50vw;
    right:25%;
    overflow: hidden;
    position:fixed;
    display:grid;
    justify-content: center;
    align-content: center;
    justify-items: center; /*so that x and 0 are in the center of the boxes <both> */ 
    align-items: center;
    grid-template-columns: repeat(3,auto); /*getting in 3 col instead of one line */
}
.cell{

    width: var(--cell-size);
    height: var(--cell-size);
   border: 1px solid black; 
   display: flex;
   justify-content: center;
   align-items: center;
   position: relative;
   cursor: pointer;
   
}
.cell.x,
.cell.o
{

    cursor: not-allowed;
}

.cell:first-child,
.cell:nth-child(2),
.cell:nth-child(3)
{

    border-top: none;
    
}

.cell:nth-child(7),
.cell:nth-child(8),
.cell:nth-child(9)
{

border-bottom: none;
}
.cell:nth-child(4),
.cell:nth-child(1),
.cell:nth-child(7)


{
    border-left: none;
}

.cell:nth-child(6),
.cell:nth-child(3),
.cell:nth-child(9)


{
    border-right: none;
}

.cell.x::before,
.cell.x::after,
.board.x .cell:not(.x):not(.o):hover::before,
.board.x .cell:not(.x):not(.o):hover::after
{
    width: calc(var(--mark-size)* .15);
    height: var(--mark-size);
    content: ' ';
    background-color: black;

    position: absolute;
}


.cell.x::before,
.board.x .cell:not(.x):not(.o):hover::before{

    transform: rotate(45deg);
}
.cell.x::after,
.board.x .cell:not(.x):not(.o):hover::after{
    transform: rotate(-45deg);
}

.cell.o::before,
.cell.o::after,
.board.o .cell:not(.x):not(.o):hover::before,
.board.o  .cell:not(.x):not(.o):hover::after
{

    
    content: ' ';
   
    border-radius: 50%;
   position: absolute;
}

.cell.o::before,
.board.o  .cell:not(.x):not(.o):hover::before{
    width: var(--mark-size);
    height: var(--mark-size);
    background-color: black;


}
.cell.o::after,
.board.o .cell:not(.x):not(.o):hover::after{

    width: calc(var(--mark-size)* 0.7);
    height: calc(var(--mark-size)* 0.7);
    background-color: white;
}

/* hovering effect for x or o in every cell */

.cell.x::before,
.cell.x::after{

    background-color: black;
} 
/* grey was being override by black so above css */
.board.x  .cell:not(.x):not(.o):hover::before,
.board.x  .cell:not(.x):not(.o):hover::after{
    background-color:lightgrey;



} 

.cell.o::before
{

   background-color: black; 

} 
/* grey was being override by black so above css */
.board.o  .cell:not(.x):not(.o):hover::before
{
    background-color:lightgrey;



} 
.board.o  .cell:not(.x):not(.o):hover::after
{
    width: calc(var(--mark-size)* 0.7);
    height: calc(var(--mark-size)* 0.7);
    background-color: white;


}

.winning-msg{

    position: fixed;
    top:0;
    right: 0;
    left:0;
    bottom: 0;
    background-color: rgba(0,0,0,0.9);
    display: flex;
    align-items: center;
    justify-content: center;
    color:white;
    font-size: 60px;
    flex-direction: column;
    display: none;
}

button{


    font-size: 30px;
    background-color: whitesmoke;
    border: 1 px solid black;
    text-decoration: none;
    cursor: pointer;
    text-overflow: ellipsis;
    padding: 10px 15px;
    
}
button:hover{

    background-color:black;
    color: white;
    border-color: white;
}

.winning-msg.show{


    display: flex;
}

